name: 'ECS Blue/Green Deploy'
description: 'Builds Docker image, pushes to ECR, and deploys via ECS + CodeDeploy'
inputs:
  aws-access-key-id:
    required: true
  aws-secret-access-key:
    required: true
  aws-region:
    required: true
  application-name:
    required: true
  deployment-group:
    required: true
  image-name:
    required: true
  ecr-registry:
    required: true
runs:
  using: "composite"
  steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: Login to ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and Push Docker Image
      shell: bash
      run: |
        IMAGE_URI=${{ inputs.ecr-registry }}/${{ inputs.image-name }}:latest
        docker build -t $IMAGE_URI .
        docker push $IMAGE_URI
        echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

    - name: Replace image in taskdef.json
      shell: bash
      run: |
        sed -i "s|<IMAGE_URI>|$IMAGE_URI|g" taskdef.json

    - name: Register new ECS Task Definition
      id: register-task
      shell: bash
      run: |
        TASK_DEF_ARN=$(aws ecs register-task-definition \
          --cli-input-json file://taskdef.json \
          --query 'taskDefinition.taskDefinitionArn' --output text)
        echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV

    - name: Inject Task Definition ARN into AppSpec
      shell: bash
      run: |
        sed -i "s|<TASK_DEFINITION_ARN>|$TASK_DEF_ARN|g" appspec.yaml

    - name: Create CodeDeploy Deployment
      shell: bash
      run: |
        aws deploy create-deployment \
          --application-name ${{ inputs.application-name }} \
          --deployment-group-name ${{ inputs.deployment-group }} \
          --deployment-config-name CodeDeployDefault.ECSAllAtOnce \
          --revision revisionType=AppSpecContent,appSpecContent="{\"content\":\"$(base64 -w 0 appspec.yaml)\"}" \
          --description "Deploy from GitHub Actions"
