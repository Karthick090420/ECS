name: ECS Blue/Green Deploy

on:
 workflow_dispatch:
jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  # Change as needed

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and Push Docker Image
      env:
        ECR_REPO: 123456789012.dkr.ecr.us-east-1.amazonaws.com/my-app
      run: |
        docker build -t $ECR_REPO:latest .
        docker push $ECR_REPO:latest

    - name: Replace Image in taskdef.json
      run: |
        IMAGE_URI=123456789012.dkr.ecr.us-east-1.amazonaws.com/my-app:latest
        sed -i "s|<IMAGE_URI>|$IMAGE_URI|g" taskdef.json

    - name: Register ECS Task Definition
      id: register-task
      run: |
        TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://taskdef.json --query 'taskDefinition.taskDefinitionArn' --output text)
        echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV

    - name: Update AppSpec with Task Definition ARN
      run: |
        sed -i "s|<TASK_DEFINITION_ARN>|$TASK_DEF_ARN|g" appspec.yaml

    - name: Create Deployment in CodeDeploy
      run: |
        aws deploy create-deployment \
          --application-name my-codedeploy-app \
          --deployment-group-name my-deployment-group \
          --revision revisionType=AppSpecContent,appSpecContent={content="$(cat appspec.yaml | base64 | tr -d '\n')"} \
          --deployment-config-name CodeDeployDefault.ECSAllAtOnce \
          --description "GitHub Actions deployment"
